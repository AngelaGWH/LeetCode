/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        std::vector<int> res;
        midSearch(root, res);
        std::sort(res.begin(), res.end());
        int min = INT_MAX;
        for(int i = 0; i < res.size(); i++)
        {
            if(i + 1 < res.size() and min > std::abs(res[i] - res[i + 1]))
                min = std::abs(res[i] - res[i + 1]);
        }
        return min;
    }
private:
    void midSearch(TreeNode* root, vector<int>& res)
    {
        if(root == nullptr)
            return;
        if(root->left)
            midSearch(root->left, res);
        res.push_back(root->val);
        if(root->right)
            midSearch(root->right, res);
    }
};