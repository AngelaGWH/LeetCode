/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int> res;
        while(head)
        {
            res.push_back(head->val);
            head = head->next;
        }
        if(not res.size())
            return nullptr;
        TreeNode* root = makeBST(res, 0, res.size() - 1);
        return root;
    }
private:
    TreeNode* makeBST(vector<int>& res, int start, int end)
    {
        if(start > end)
            return nullptr;
        int mid = (start + end)/2;
        TreeNode* root = new TreeNode(res[mid]);
        root->left = makeBST(res, start, mid - 1);
        root->right = makeBST(res, mid + 1, end);
        return root;
    }
};