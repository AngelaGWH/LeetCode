class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        if(grid.size() == 0 or grid[0].size() == 0) return 0;
        int row = grid.size();
        int col = grid[0].size();
        vector<vector<int>> container(row, vector<int>(col, 0));
        container[0][0] = grid[0][0];
        for(int i = 1 ; i < col; i++)
            container[0][i] = container[0][i - 1] + grid[0][i];
        for(int j = 1; j < row; j++)
            container[j][0] = container[j - 1][0] + grid[j][0];
        cout<<"Here"<<endl;
        for(int i = 1; i < row; i++)
            for(int j = 1; j < col; j++)
            {
                container[i][j] = grid[i][j] + std::min(container[i-1][j], container[i][j-1]);
            }
        return container[row-1][col-1];
    }
};



